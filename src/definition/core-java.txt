***ANSWER ALL QUESTIONS BELOW***

What is a programming language?
Answer:A programming language is a computer language that is used by programmers (developers) to communicate
with computers. It is a set of instructions written in any specific language ( C, C++, Java, Python)
to perform a specific task. A programming language is mainly used to develop desktop applications,
 websites, and mobile applications.


What is a JDK composed of? Define each components?
Answer:All the Java-based Applications and Applets are developed using the JDK. It consists of a number of software
components. One is JRE (Java Runtime Environment) and other tools like java and javac – that combinedly called a
development tool. JRE is having JVM (Java Virtual Machine) and other library files. JDK provides a base to
all the applications targeted to build on the Java platform. The software contains a variety of tools and
 utilities, which helps to perform a variety of tasks. So, this is just an overview of JDK.

       JDK Components
       Let’s have a look at some of the most used JDK Components listed below:

       JRE: Java Runtime Environment
       java: It’s simply a loader that works for all the java applications. Also, this particular tool interprets
        the class file generated by javac. The single java launcher is used for the purpose of development
         and deployment. Gone are the days when JRE was used as the deployment launcher. Nowadays, JRE doesn’t
          exist with the Sun JDK and totally replaced by this new java loader.
       javac: It’s a compiler. And, basically, it converts source code into Java bytecode
       appletviewer: Through this component, we can run the Java applets without taking the help of a web browser
        and even debug them.
       apt: This is used as an annotation-processing tool
       extcheck: For identifying the conflicts, this next check is used
       idlj: An IDL-to-Java compiler used to generate Java bindings from the provided Java IDL file
       jabswitch: It is a Java Access Bridge
       javadoc: It is a documentation generator, which produces documentation from source code comments,
       automatically
       jar: It is an archiver. Along with related class libraries packages into one JAR file. Also, it manages
        those files
       javafxpackager: It is a tool to attain packages and sign JavaFX applications
       jarsigner: It’s a verification and jar signing tool
       javah: It’s a stub generator and ‘C’ header that is used for writing built-in methods
       javap: It’s a class file disassembler
       javaws: It’s a Java Web Start launcher for JNLP applications
       JConsole: It’s a Console used for Java Monitoring and Management
       jdb: It’s a debugger
       jhat: It’s a Java Heap Analysis Tool (experimental)
       jinfo: It particularly used to get the configuration information from a running Java process
       jmap: It’s an Oracle jmap which is also a Memory Map. This gives the result of the memory map for Java.
        On the other hand, it is useful in printing heap memory, or shared object memory maps details of a
        particular core dump or process.
       jmc: It’s known as a Java Mission Control
       jps: it’s a JVM Process, Status Tool. It is capable of listing the instrumented HotSpot JVMs on the
       target system
       jrunscript: It’s a Java command-line script shell
       jstack: A tool prints Java stack traces of Java threads
       jstat: Java Virtual Machine statistic monitoring tool
       keytool: A tool for manipulating the Keystore
       pack200: JAR compression tool
       Policytool: Utility that determines the Java runtime. That means it is a policy creation and
       management tool.
       VisualVM: It’s a visual tool. It is integrated with numerous command-line JDK tools.
       wsimport: It produces portable JAX-WS artifacts with an aim to invoke a web service
       xjc: It’s the part of the Java API boosting the XML Binding (JAXB) API. After accepting the XML
       schema, it generates Java classes

What is an IDE?
Answer:An integrated development environment (IDE) is a software application that provides
comprehensive facilities to computer programmers for software development. An IDE normally consists of at least
 a source code editor, build automation tools and a debugger.

What are some of the most popular Java IDEs available in the market?
Answer:Top 10 Java IDEs :Eclipse,IntelliJ,NetBeans,JDeveloper,MyEclipse,BlueJ,JCreator,DrJava,jGRASP
       ,JSource....

Explain the entire java life cycle.
Answer:A thread can be in one of the five states. According to sun, there is only 4 states in thread
life cycle in java new, runnable, non-runnable and terminated. There is no running state.

What is a class?
Answer:A class — in the context of Java — is a template used to create objects and to define object
data types and methods. Classes are categories, and objects are items within each category. Core properties
 include the actual attributes/values and methods that may be used by the object.

What is an object?
Answer:A Java object is a combination of data and procedures working on the available data. An object has a
state and behavior. The state of an object is stored in fields (variables), while methods (functions) display
 the object's behavior. Objects are created from templates known as classes.

What is the entry point of an application?
Answer:An application entry point identifies a resource that is an access point to an application.
Application entry points are used to control users' access to different versions of an application that is
deployed on a platform.

Why is the main() static?
Answer:main() method is always static, so that compiler can call it without the creation of an object or before
the creation of an object of the class. In any Java program, the main() method is the starting point from where
compiler starts program execution. So, the compiler needs to call the main() method.

Which class is the superclass of all classes?
Answer:The class named Object is the super class of every class in Java.

What is difference between path and classpath variables?
Answer:PATH is the environment variable where we specify the locations of binaries.
       Example: We add bin directory path of JDK or JRE, so that any binaries under the directory can be
       accessed directly without specifying absolute path.

       CLASSPATH is the path for Java application where the classes you compiled will be available.

What is the difference between an Interface and Abstract class?
Answer:An abstract class allows you to create functionality that subclasses can implement or override. An
 interface only allows you to define functionality, not implement it. And whereas a class can extend only one
 abstract class, it can take advantage of multiple interfaces.

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer:we cannot create an object of abstract class or interface since they are incomplete class (interface is
not even considered as a class.) What you can do is to implement a subclass of abstract class which, of course,
must not be abstract.

What is Access Modifier?
Answer:Access modifiers (or access specifiers) are keywords in object-oriented languages that set the
accessibility of classes, methods, and other members. Access modifiers are a specific part of programming
language syntax used to facilitate the encapsulation of components.

What is OOP? Define each OOP concept.
Answer:Object-Oriented Programming System (OOPs) is a programming concept that works on the principles
of abstraction, encapsulation, inheritance, and polymorphism. It allows users to create objects they want and
create methods to handle those objects.
The following are general OOPs concepts in Java:

1) Class
The class is one of the Basic concepts of OOPs which is a group of similar entities. It is only a logical component
 and not the physical entity.
 2) Object
 An object can be defined as an instance of a class, and there can be multiple instances of a class in a program.
  An Object is one of the Java OOPs concepts which contains both the data and the function, which operates on
  the data.
  3) Inheritance
  Inheritance is one of the Basic Concepts of OOPs in which one object acquires the properties and behaviors
   of theparent object.
  4) Polymorphism
  Polymorphism refers to one of the OOPs concepts in Java which is the ability of a variable, object or function
   to take on multiple forms.
5) Abstraction
Abstraction is one of the OOP Concepts in Java which is an act of representing essential features without
including background details.
6) Encapsulation
Encapsulation is one of the best Java OOPs concepts of wrapping the data and code. In this OOPs concept, the
variables of a class are always hidden from other classes.
7) Association
Association is a relationship between two objects. It is one of the OOP Concepts in Java which defines the diversity
 between objects.
 8) Aggregation
 In this technique, all objects have their separate lifecycle. However, there is ownership such that child object
 can’t belong to another parent object.
 9) Composition
 Composition is a specialized form of Aggregation. It is also called “death” relationship. Child objects do not have
  their lifecycle so when parent object deletes all child object will also delete automatically.

What is Java Package and which package is imported by default?
Answer:Java compiler imports java. lang package internally by default. It provides the fundamental classes that
are necessary to design a basic Java program. The important classes are Object, which is the root of the
class hierarchy, and Class, instances of which represent classes at run time.

What is an API? List some API's that you have used so far.
Answer:Application Programming Interfaces — play a bigger role in today’s economy than ever before. They
allow us to share important data and expose practical business functionality between devices, applications,
and individuals. And although we may not notice them, APIs really are everywhere, powering our lives from
behind the scenes.
Examples of APIs We Use in Our Everyday Lives
Weather Snippets. Google utilizes APIs to display relevant data from user search queries. ...
Log-in Using XYZ. Taken from Buffer's social login. ...
Pay with PayPal. ...
Twitter Bots. ...
Travel Booking.

Does java support multiple inheritance? Why or why not?
Answer:
Java supports multiple inheritance through interfaces only. A class can implement any number of interfaces but
 can extend only one class. Multiple inheritance is not supported because it leads to deadly diamond problem.

What is method overloading and when does it happen?
Answer:
Overloading occurs when two or more methods in one class have the same method name but different parameters.
Must have at least two methods by the same name in the class. Must have a different number of parameters.
If the number of parameters is the same, then it must have different types of parameters.

Explain exceptions in java and how to handle them.
Answer: The try-catch is the simplest method of handling exceptions. Put the code you want to run in the try
block, and any Java exceptions that the code throws are caught by one or more catch blocks. This method will
catch any type of Java exceptions that get thrown. This is the simplest mechanism for handling exceptions.

What is static keyword? When and how do we use it?
Answer: In Java, static keyword is mainly used for memory management. It can be used with variables, methods,
blocks and nested classes. It is a keyword which is used to share the same variable or method of a given class.
 Basically, static is used for a constant variable or a method that is same for every instance of a class.

What is final keyword? When and how do we use it?
Answer: a non-access specifier that is used to restrict a class, variable, and method.

Explain the difference between final, finally and finalize?
Answer:  is that the final is an keyword, finally is the block in Exception Handling and finalize is the
 method of object class. ... finalize is the method in Java which is used to perform clean up processing just
  before object is garbage collected.

What is a constructor?
Answer: A constructor in Java is a block of code similar to a method that's called when an instance of an object
is created.

Can we have multiple constructors in a class?
Answer:The technique of having two (or more) constructors in a class is known as constructor overloading. A class
 can have multiple constructors that differ in the number and/or type of their parameters. It's not, however,
 possible to have two constructors with the exact same parameters.

If we don't have a constructor declared, what is called during the object creation?
Answer: All classes have at least one constructor. If a class does not explicitly declare any, the Java compiler
 automatically provides a no-argument constructor, called the default constructor. ... If the parent has no
 constructor ( Object does have one), the compiler will reject the program.

What is "this" keyword in Java? When would we use it?
Answer:The "this" keyword refers to the current object in a method or constructor. The most common use of the this
keyword is to eliminate the confusion between class attributes and parameters with the same name

What is "super" keyword in Java? What are some scenarios we would use it?
Answer:  super Keyword
        super can be used to refer immediate parent class instance variable. super can be used to invoke immediate
        parent class method. super() can be used to invoke immediate parent class constructor.

What does JVM stand for?
Answer:A Java virtual machine (JVM) is a virtual machine that enables a computer to run Java programs as well as
programs written in other languages that are also compiled to Java bytecode.

Is JVM platform independent?
Answer:No, JVMs are not platform independent.

What version of Java are you using?
Answer:Windows Intellij IDEA Community Edition 2021.2

What does JAR stand for?
Answer:It's a file format based on the popular ZIP file format and is used for aggregating many
files into one.

What is the difference between JDK and JVM?
Answer:JDK is a software development kit whereas JRE is a software bundle that allows Java program to run,
whereas JVM is an environment for executing bytecode. The full form of JDK is Java Development Kit, while the
 full form of JRE is Java Runtime Environment, while the full form of JVM is Java Virtual Machine.

What is the difference between JVM and JRE?
Answer:The JVM is the process that runs the Java code, and the JRE are all files distributed to form the
"environment" in which the JVM runs. JRE is an environment, in order to execute any Java program locally.

Explain the difference between compile-time and run-time?
Answer:Compile time is when the program is compiled; runtime is when it executes (on either a physical or
virtual computer). Programmers use the term static to refer to anything that is created during compile time
 and stays fixed during the program run.

What is heap?
Answer: is a part of memory allocated to JVM, which is shared by all executing threads in the application.

How does Java manage its memory?
Answer: memory management is the process of allocation and de-allocation of objects, called Memory management.
 Java does memory management automatically. Java uses an automatic memory management system called a garbage
 collector.

What is the difference between String, StringBuffer and StringBuilder?
Answer:The String class is an immutable class whereas StringBuffer and StringBuilder classes are mutable.

What is Singleton class?
Answer:a singleton class is a class that can have only one object (an instance of the class) at a time.

What is Serialization and Deserialization?
Answer: is a mechanism of converting the state of an object into a byte stream.

Explain the difference between While and Do..While loops?
Answer:The while loop tests the condition before executing any of the statements within the while loop whereas
the do-while loop tests the condition after the statements have been executed within the loop.

What is Enum?
Answer:

What is Iterator?
Answer:

Which one will take more memory: an int or Integer? Why?
Answer:An enum is a special "class" that represents a group of constants (unchangeable variables,
like final variables).

Why are Strings considered to be immutable in Java?
Answer:The String is immutable in Java because of the security, synchronization and concurrency,
caching,and class loading. The reason of making string final is to destroy the immutability and to
not allow others to extend it. The String objects are cached in the String pool, and it makes the
 String immutable.

What is constructor chaining in Java?
Answer:Constructor chaining is the process of calling one constructor from another constructor with respect
to current object. ... Within same class: It can be done using this() keyword for constructors in same class.
 From base class: by using super() keyword to call constructor from the base class.

The difference between Serial and Parallel Garbage Collector?
Answer:a serial collector is a default copying collector which uses only one GC thread for the GC operation,
while a parallel collector uses multiple GC threads for the GC operation.

What does JIT stands for?
Answer:JIT stands for Just in Time. It is an inventory management method used for reducing time within the
production unit. In addition,

Explain the process of Java garbage collection?
Answer:Java garbage collection is the process by which Java programs perform automatic memory management.

Can you guarantee the garbage collection process?
Answer:No, Garbage collection does not guarantee that a program will not run out of memory.

What is the difference between stack and heap in Java?
Answer:Java Heap Space is used throughout the application, but Stack is only used for the method — or
methods — currently running. The Heap Space contains all objects are created, but Stack contains any
reference to those objects. Objects stored in the Heap can be accessed throughout the application.

What is reflection in Java and why is it useful?
Answer:Reflection is a feature in the Java programming language. It allows an executing Java program to
examine or "introspect" upon itself, and manipulate internal properties of the program. For example, it's
possible for a Java class to obtain the names of all its members and display them.

What is multithreading in Java?
Answer: Multithreading refers to a process of executing two or more threads simultaneously for maximum
utilization of the CPU.

What is synchronization in Java?
Answer:Synchronization in java is the capability to control the access of multiple threads to any
 shared resource.

What is a Framework?
Answer:frameworks are bodies of prewritten code used by developers to create apps using the Java
 programming language.

What are the testing Frameworks available in Java?
Answer:Selenium. Selenium is a free and open-source testing framework and is mostly used to test web
applications based on various platforms. Serenity.JUnit.TestNG.Cucumber.JBehave.Mockito.

What are jUnit and testNG?
Answer:JUnit is an open-source framework used to trigger and write tests. TestNG is a Java-based framework th
at is an upgraded option for running tests. Parallel test Runs. JUnit does not support to run parallel tests.
 TestNG can run parallel tests.

What are the dependencies for this project?
Answer:Dependencies are the relationships of the preceding tasks to the succeeding tasks.

What is dependency injection in Java?
Answer: is the concept in which objects get other required objects from outside.

